// Generated by BUCKLESCRIPT VERSION 4.0.14, PLEASE EDIT WITH CARE
'use strict';

var List = require("bs-platform/lib/js/list.js");
var Block = require("bs-platform/lib/js/block.js");
var Curry = require("bs-platform/lib/js/curry.js");
var React = require("react");
var Pervasives = require("bs-platform/lib/js/pervasives.js");
var ReasonReact = require("reason-react/src/ReasonReact.js");
var Todos$ReactTemplate = require("./Todos.bs.js");
var TodoInput$ReactTemplate = require("./TodoInput.bs.js");
var VerticalSpacer$ReactTemplate = require("./utilComponents/VerticalSpacer.bs.js");

var component = ReasonReact.reducerComponent("todoList");

function str(prim) {
  return prim;
}

function make(_children) {
  return /* record */[
          /* debugName */component[/* debugName */0],
          /* reactClassInternal */component[/* reactClassInternal */1],
          /* handedOffState */component[/* handedOffState */2],
          /* willReceiveProps */component[/* willReceiveProps */3],
          /* didMount */component[/* didMount */4],
          /* didUpdate */component[/* didUpdate */5],
          /* willUnmount */component[/* willUnmount */6],
          /* willUpdate */component[/* willUpdate */7],
          /* shouldUpdate */component[/* shouldUpdate */8],
          /* render */(function (param) {
              var send = param[/* send */3];
              var state = param[/* state */1];
              var match = List.length(state[/* todos */2]) < 1;
              return React.createElement("div", {
                          id: "list_component"
                        }, ReasonReact.element(undefined, undefined, VerticalSpacer$ReactTemplate.make("50", /* array */[])), ReasonReact.element(undefined, undefined, TodoInput$ReactTemplate.make(send, state, /* array */[])), ReasonReact.element(undefined, undefined, VerticalSpacer$ReactTemplate.make("25", /* array */[])), React.createElement("div", {
                              id: "todo-list"
                            }, match ? "Nothing yet" : ReasonReact.element(undefined, undefined, Todos$ReactTemplate.make(state[/* todos */2], send, state[/* showCompleted */1], /* array */[]))), React.createElement("button", {
                              id: "hide-button",
                              onClick: (function (param) {
                                  return Curry._1(send, /* ToggleHidden */0);
                                })
                            }, "Hide Completed Todos"), React.createElement("div", {
                              id: "todo-count"
                            }, "Todos left: " + String(List.length(List.filter((function (todo) {
                                              return !todo[/* completed */1];
                                            }))(state[/* todos */2])))));
            }),
          /* initialState */(function (param) {
              return /* record */[
                      /* count */0,
                      /* showCompleted */true,
                      /* todos : [] */0,
                      /* todoText */""
                    ];
            }),
          /* retainedProps */component[/* retainedProps */11],
          /* reducer */(function (action, state) {
              var removeTodoById = function (id) {
                var theTodo = List.find((function (todo) {
                        return todo[/* id */2] === id;
                      }), state[/* todos */2]);
                var updatedTodo_000 = /* description */theTodo[/* description */0];
                var updatedTodo_001 = /* completed */!theTodo[/* completed */1];
                var updatedTodo_002 = /* id */theTodo[/* id */2];
                var updatedTodo = /* record */[
                  updatedTodo_000,
                  updatedTodo_001,
                  updatedTodo_002
                ];
                var todosWithoutMatch = List.filter((function (todo) {
                          return todo[/* id */2] !== id;
                        }))(state[/* todos */2]);
                var updatedList = Pervasives.$at(/* :: */[
                      updatedTodo,
                      /* [] */0
                    ], todosWithoutMatch);
                var sortedList = List.sort((function (first, second) {
                        return first[/* id */2] - second[/* id */2] | 0;
                      }), updatedList);
                return /* record */[
                        /* count */state[/* count */0],
                        /* showCompleted */state[/* showCompleted */1],
                        /* todos */sortedList,
                        /* todoText */state[/* todoText */3]
                      ];
              };
              if (typeof action === "number") {
                return /* Update */Block.__(0, [/* record */[
                            /* count */state[/* count */0],
                            /* showCompleted */!state[/* showCompleted */1],
                            /* todos */state[/* todos */2],
                            /* todoText */state[/* todoText */3]
                          ]]);
              } else {
                switch (action.tag | 0) {
                  case 0 : 
                      var todo = action[0];
                      var match = todo[/* description */0].length !== 0;
                      return /* Update */Block.__(0, [/* record */[
                                  /* count */state[/* count */0] + 1 | 0,
                                  /* showCompleted */state[/* showCompleted */1],
                                  /* todos */match ? Pervasives.$at(state[/* todos */2], /* :: */[
                                          todo,
                                          /* [] */0
                                        ]) : state[/* todos */2],
                                  /* todoText */""
                                ]]);
                  case 1 : 
                      return /* Update */Block.__(0, [/* record */[
                                  /* count */state[/* count */0],
                                  /* showCompleted */state[/* showCompleted */1],
                                  /* todos */state[/* todos */2],
                                  /* todoText */action[0]
                                ]]);
                  case 2 : 
                      return /* Update */Block.__(0, [removeTodoById(action[0])]);
                  
                }
              }
            }),
          /* jsElementWrapped */component[/* jsElementWrapped */13]
        ];
}

exports.component = component;
exports.str = str;
exports.make = make;
/* component Not a pure module */
